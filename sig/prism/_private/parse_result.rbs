module Prism
  class Source
    private

    def find_line: (Integer) -> Integer
  end

  class CodeUnitsCache
    class UTF16Counter
      def initialize: (String source, Encoding encoding) -> void
      def count: (Integer byte_offset, Integer byte_length) -> Integer
    end

    class LengthCounter
      def initialize: (String source, Encoding encoding) -> void
      def count: (Integer byte_offset, Integer byte_length) -> Integer
    end
  end

  class Location
    private

    def source!: () -> Source
  end

  class ParseResult
    def attach_comments!: () -> void
    def mark_newlines!: () -> untyped

    class Errors
      attr_reader parse_result: ParseResult

      def initialize: (ParseResult parse_result) -> void
      def format: () -> String
    end

    class Newlines < Visitor
      @newline_marked: Array[bool]

      # Create a new Newlines visitor with the given newline offsets.
      def initialize: (Array[bool] newline_marked) -> void

      def visit_block_node: (BlockNode node) -> void
      def visit_lambda_node: (LambdaNode node) -> void
      def visit_if_node: (IfNode node) -> void
      def visit_unless_node: (UnlessNode node) -> void
      def visit_statements_node: (StatementsNode node) -> void
    end
  end
end
